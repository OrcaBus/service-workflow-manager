---
'$schema': http://json-schema.org/draft-04/schema#
'$id': https://raw.githubusercontent.com/OrcaBus/service-workflow-manager/refs/heads/main/docs/events/WorkflowRunStateChange/WorkflowRunStateChange.schema.json
description: EventBridge custom event schema for WorkflowRunStateChange events
title: AWSEvent
type: object
required:
  # TODO: could turn this into the new version of the WRSC and keep the legacy code binding for the current one
  - source # defines the event emitter: orcabus.workflowmanager
  - detail-type # defines the event type: WorkflowRunStateChange
  - detail # actual event data
properties: # these properties are mainly controlled and managed by AWS EventBridge
  id:
    type: string
  region:
    type: string
  resources:
    type: array
    items:
      type: string
  source:
    type: string
  time:
    type: string
    format: date-time
  version:
    type: string
  account:
    type: string
  detail-type:
    type: string
  detail:
    '$ref': '#/definitions/WorkflowRunStateChange'
definitions:
  WorkflowRunStateChange: # the actual data event of the application
    type: object
    required:
      # Some fields are technically not required as they are already defined implicitly via the OrcaBus ID.
      # However, they may prove valuable regarding data validation, event-sourcing / archiving or external references.
      # Hence, and to enforce best practises rather than strictly technical requirements, we enforce them as mandatory.
      - id
      - version
      - timestamp
      - orcabusId
      - portalRunId
      - workflowRunName
      - workflow
      - status
    properties:
      id:
        # unique id for the data event, e.g. the hashed event data, useful for deduplication.
        # (This is supposed to only change if the event payload has changed)
        # NOTE: independent of the AWS event id
        type: string
      version:
        # the version associated with the event schema version (following semver)
        type: string
      timestamp:
        # time of the state change (not necessarily the event time, which is already covered in the AWS wrapper)
        type: string
        format: date-time
      orcabusId:
        # the OrcaBus internal id of the WorkflowRun, e.g. wfr.01234EXAMPLE567W0RKFL0WRUN
        type: string
      portalRunId:
        # the portal run id of the WorkflowRun
        type: string
      workflowRunName:
        # a unique name of the WorkflowRun
        type: string
      workflow:
        # the (parent) Workflow defining this WorkflowRun
        '$ref': '#/definitions/Workflow'
      analysisRun:
        # the associated AnalysisRun, grouping WorkflowRuns belonging to the same analysis
        '$ref': '#/definitions/AnalysisRun'
      libraries:
        # libraries associated with this WorkflowRun
        type: array
        items:
          '$ref': '#/definitions/Library'
      computeEnv:
        # the storage configuration to apply to this WorkflowRun
        type: string
      storageEnv:
        # the compute configuration to apply to this WorkflowRun
        type: string
      status:
        # the current/new state of the WorkflowRun that the event announces
        # Note: not every event necessarily announces a new status
        type: string
      payload:
        '$ref': '#/definitions/Payload'
  Library:
    type: object
    required:
      - libraryId
      - orcabusId
    properties:
      libraryId:
        # the lab assigned library id, e.g. L2500123
        type: string
      orcabusId:
        # the OrcaBus internal id of the Library, e.g. lib.0001234EXAMPLE56789L1BRARY
        type: string
      readsets:
        # the readsets (fastq pairs) of this library that this workflow run is based on
        type: array
        items:
          '$ref': '#/definitions/Readset'
  Readset:
    type: object
    required:
      - orcabusId
      - rgid
    properties:
      orcabusId:
        # the OrcaBus internal id of the fastq readset record, e.g. fqr.001234EXAMPLE56789AABBCCDD
        type: string
      rgid:
        # a unique id or the FastqPair/Readset that is defined by sequencing run properties
        # i.e. instrument_run_id, lane, index(es)
        type: string
  Workflow:
    type: object
    required:
      - orcabusId
      - name
      - version
      - executionEngine
    properties:
      orcabusId:
        # the OrcaBus internal id of the Workflow, e.g. wfl.001234EXAMPLE56789ANALYSIS
        type: string
      name:
        # the name of the Workflow (mainly for human readability)
        type: string
      version:
        # the version of the Workflow (mainly for human readability)
        type: string
      executionEngine:
        # the workflow execution engine
        type: string
      executionEnginePipelineId:
        # the workflow execution engine pipeline id
        type: string
      validationState:
        # the workflow validation state
        type: string
  AnalysisRun:
    type: object
    required:
      - orcabusId
      - name
    properties:
      orcabusId:
        # the OrcaBus internal id of the AnalysisRun, e.g. anr.001234EXAMPLE56789ANALYS1S
        type: string
      name:
        # the name of the AnalysisRun (mainly for human readability)
        type: string
  Payload:
    # Custom data associated with the (current) state of the WorkflowRun
    # Note: the payload data may have different content / structure depending on the state it is attached to
    #       e.g. a FAILED state may contain error output, whereas a READY state will have to include all information required to execute the WorkflowRun
    type: object
    required:
      - orcabusId
      - refId
      - version
      - data
    properties:
      orcabusId:
        # the OrcaBus internal id of the Payload, e.g. pld.0001234EXAMPLE56789PAYL0AD
        type: string
      refId:
        # a unique reference ID that is assigned by the execution service
        type: string
      version:
        # the version of the Payload (schema) defined by the execution service managing this Workflow
        type: string
      data:
        # the actual data payload for this WorkflowRun state defined and managed by the execution service
        type: object
